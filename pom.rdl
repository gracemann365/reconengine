// ===================================================================
// Maven POM Definition Language (POMDL) v1.0
// Single Source of Truth for Maven POM Architecture in Reconciliation Engine PoC
// ===================================================================

// -------------------------------------------------------------------
// 1. Global Maven Project & Architectural Definitions
// -------------------------------------------------------------------

maven_project_scope {
  parent_coordinates {
    groupId    = "com.grace.recon"
    artifactId = "reconengine"
    version    = "1.0.0-SNAPSHOT"
  }
  java_version = 21
  source_encoding = "UTF-8"
  packaging_types_allowed = ["pom", "jar"]
}

maven_architectural_contracts {
  id                      = "RECONCILIATION-ENGINE-MAVEN-V1.0-20250707-OMNI"
  build_tool_type         = "Maven"
  core_principles {
    parent_sanctity = "All child modules MUST declare the root 'reconengine' POM as their parent."
    dependency_centralization = "All major and shared dependencies MUST be managed in the parent POM's <dependencyManagement> section."
    plugin_centralization = "All major and shared plugins MUST be managed in the parent POM's <pluginManagement> section."
    version_consistency = "No explicit versions for managed dependencies/plugins in child POMs."
    enforcer_rules_mandatory = "The Maven Enforcer Plugin MUST be configured in the parent to enforce critical rules."
  }
}

// -------------------------------------------------------------------
// 2. Dependency Management Rules
// -------------------------------------------------------------------

dependency_management_rules {
  enforce_convergence = true
  allowed_scopes = ["compile", "provided", "runtime", "test", "import"]
  banned_child_declarations {
    versions_for_managed_dependencies = "Child POMs MUST NOT declare <version> for dependencies already present in parent's <dependencyManagement>."
  }
  banned_dependencies = [
    // Add specific banned dependencies here, e.g., { groupId = "org.apache.commons", artifactId = "commons-collections" }
  ]
}

// -------------------------------------------------------------------
// 3. Plugin Management Rules
// -------------------------------------------------------------------

plugin_management_rules {
  required_plugins = [
    { groupId = "org.springframework.boot", artifactId = "spring-boot-maven-plugin" },
    { groupId = "org.apache.maven.plugins", artifactId = "maven-compiler-plugin" },
    { groupId = "org.jacoco", artifactId = "jacoco-maven-plugin" },
    { groupId = "com.diffplug.spotless", artifactId = "spotless-maven-plugin" },
    { groupId = "org.owasp", artifactId = "dependency-check-maven" },
    { groupId = "org.apache.avro", artifactId = "avro-maven-plugin" }
  ]
  banned_child_declarations {
    versions_for_managed_plugins = "Child POMs MUST NOT declare <version> for plugins already present in parent's <pluginManagement>."
  }
  banned_plugins = [
    // Add specific banned plugins here, e.g., { groupId = "org.apache.maven.plugins", artifactId = "maven-antrun-plugin" }
  ]
}

// -------------------------------------------------------------------
// 4. Maven Enforcer Plugin Configuration
// -------------------------------------------------------------------

enforcer_plugin_configuration {
  min_maven_version = "3.9.0"
  min_java_version = 21
  rules_enabled = [
    "requireMavenVersion",
    "requireJavaVersion",
    "dependencyConvergence"
  ]
  // Consider adding 'bannedDependencies' and 'bannedPlugins' rules to Enforcer if needed for strict enforcement.
}

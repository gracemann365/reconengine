# LLM Agent Onboarding Manifest (Trigger File)
# Version: 3.0 (Unified Bootstrap)
# This file is the primary entry point for any AI agent interacting with this project.
# Read and parse this file first to understand the project's live state and the purpose of all other knowledge sources.

llm_onboarding_manifest:
  manifest_version: 3.0
  description: "A unified manifest containing the project's current state, RDL framework definition, and prioritized knowledge source files with directives for their use."

  # ===================================================================
  # RDL Framework Definition (Integrated from meta.rdl)
  # ===================================================================
  rdl_framework:
    name: "Reconciliation Definition Language (RDL) Framework"
    version: "1.4"
    purpose: "A suite of Domain-Specific Languages to provide a single, unified, human-readable source of truth for the entire Reconciliation Engine PoC."
    author: "Gracemann365"
    
    components:
      - id: "SYSTEM_BLUEPRINT"
        file: "reconengine.rdl"
        version: "1.4"
        purpose: "The master architectural blueprint. Defines all microservices, their components, their interactions, and their core contracts."
        primary_audience: ["Architects", "Developers"]
        scope: "System-wide architecture and runtime behavior."
        
      - id: "DATA_SPECIFICATION"
        file: "etl.rdl"
        version: "1.0"
        purpose: "The definitive specification for all data sources and ETL processes. Defines schemas, transformation rules, and data quality expectations."
        primary_audience: ["Data Engineers", "Developers"]
        scope: "Data ingestion, transformation, and validation."
        
      - id: "BUILD_SPECIFICATION"
        file: "pom.rdl"
        version: "1.0"
        purpose: "The architectural contract for the Maven build system. Defines rules for dependency management, plugin usage, and enforcer policies."
        primary_audience: ["Developers", "Build Engineers"]
        scope: "Build, dependency, and artifact management."
        
      - id: "KNOWLEDGE_LOG"
        file: "pitfalls.JSON"
        version: "1.0"
        purpose: "A living document logging diagnostic mistakes, their root causes, and their resolutions to build institutional knowledge and improve future efficiency."
        primary_audience: ["All Team Members", "AI Assistants"]
        scope: "Project history and operational learnings."
        
      - id: "FRAMEWORK_MANIFEST"
        file: "meta.rdl"
        version: "1.0"
        purpose: "The root manifest for the RDL framework itself. Defines the purpose and scope of all other RDL components."
        primary_audience: ["All Team Members", "AI Assistants"]
        scope: "Self-description of the documentation framework."

  # ===================================================================
  # Live Project State
  # ===================================================================
  project_state_snapshot:
    last_updated: "2025-07-10T07:30:00Z"
    current_milestone_id: "PROJECT.T2"
    current_milestone_name: "Develop & Integrate Orchestrator Microservice"
    next_granular_task_id: "CP8.T1"
    next_granular_task_name: "Setup Orchestrator Module Structure"

  # ===================================================================
  # Knowledge Sources (Prioritized)
  # ===================================================================
  knowledge_sources:
    - file_path: "trigger.yml"
      priority: 0
      purpose: "This file. The unified bootstrap manifest for the entire project context and RDL framework."
      update_trigger: "When the overall project methodology changes, RDL framework evolves, or this file's structure is improved."
      key_data_points: ["project_state_snapshot", "knowledge_sources", "rdl_framework"]
      rdl_component_id: "FRAMEWORK_MANIFEST"

    - file_path: "reconengine.rdl"
      priority: 1
      purpose: "The master architectural blueprint of the entire system."
      update_trigger: "Only when a fundamental architectural decision is made or changed by the operator."
      key_data_points: ["project_scope", "architectural_contracts", "service", "library"]
      rdl_component_id: "SYSTEM_BLUEPRINT"

    - file_path: "progressPoc_llm.yml"
      priority: 1
      purpose: "The primary, high-level project plan and status tracker."
      update_trigger: "When a major milestone (e.g., INFRA.T2) is fully completed."
      key_data_points: ["tasks", "status", "dependencies"]

    - file_path: "taskQueue_granular.json"
      priority: 2
      purpose: "The tactical, detailed work queue for the CURRENT major milestone."
      update_trigger: "When a granular sub-task (e.g., CP6.T1) is completed, or when a new milestone is started."
      key_data_points: ["completed_tasks", "pending_tasks"]

    - file_path: "limitless.yml"
      priority: 2
      purpose: "An analytical profile of the human operator to tailor AI collaboration."
      update_trigger: "Infrequently; only if the operator's core methodology or interaction patterns change significantly."
      key_data_points: ["primary_operating_methodology", "key_competencies_demonstrated", "interaction_patterns_with_ai"]

    - file_path: "etl.rdl"
      priority: 3
      purpose: "The definitive specification for all data sources and ETL processes."
      update_trigger: "When data schemas, transformation rules, or quality expectations change."
      key_data_points: ["data_sources", "transformation_rules", "quality_expectations"]
      rdl_component_id: "DATA_SPECIFICATION"

    - file_path: "pom.rdl"
      priority: 3
      purpose: "The architectural contract for the Maven build system."
      update_trigger: "When a new global dependency, plugin, or build rule is mandated for the project."
      key_data_points: ["dependency_management_rules", "plugin_management_rules", "enforcer_plugin_configuration"]
      rdl_component_id: "BUILD_SPECIFICATION"

    - file_path: "confession.rdl"
      priority: 4
      purpose: "A historical log of major decisions, achievements, and learnings."
      update_trigger: "After a significant phase or decision-making process is complete."
      key_data_points: ["decisions", "achievements", "learnings"]

    - file_path: "pitfalls.rdl"
      priority: 4
      purpose: "A historical log of diagnostic mistakes and their resolutions."
      update_trigger: "After a non-trivial problem is diagnosed and resolved, to prevent recurrence."
      key_data_points: ["pitfall_entry", "root_cause", "resolution"]
      rdl_component_id: "KNOWLEDGE_LOG"

    - file_path: "memoryRECON.json"
      priority: 4
      purpose: "A condensed, machine-readable JSON representation of the system architecture."
      update_trigger: "Should be regenerated if the master `reconengine.rdl` file changes."
      key_data_points: ["microservice_topology_overview", "architectural_contracts"]

  # ===================================================================
  # Usage Instructions for AI Agents
  # ===================================================================
  ai_agent_instructions:
    onboarding_sequence:
      1. "Parse this trigger.yml file completely to understand the project context and RDL framework"
      2. "Review knowledge sources in priority order (0-4)"
      3. "Check project_state_snapshot for current milestone and next task"
      4. "Reference rdl_framework.components to understand the documentation architecture"
      5. "Use rdl_component_id mappings to cross-reference files with their framework roles"
    
    update_protocol:
      - "Always update project_state_snapshot when milestone progress occurs"
      - "Increment manifest_version when structural changes are made to this file"
      - "Maintain rdl_framework.components synchronization with actual RDL files"
      - "Update knowledge_sources priorities and purposes as the project evolves"
